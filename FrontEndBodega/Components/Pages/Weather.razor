@page "/weather"
@using FrontEndBodega.Services;
@using FrontEndBodega.DTO;
@inject RegistroUserService UsuarioServicee
@inject NavigationManager NavManager


<h3>Lista de Usuarios</h3>

@if (usuarios == null)
{
    <p><em>Cargando...</em></p>
}
else if (!usuarios.Any())
{
    <p>No hay usuarios disponibles.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Correo</th>
                <th>Nombre</th>
                <th>Teléfono</th>
                <th>Username</th>
                <th>Rol</th>
                <th>Status</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in usuarios)
            {
                <tr>
                    <td>@user.CorreoElectronico</td>
                    <td>@user.NombreCompleto</td>
                    <td>@user.Telefono</td>
                    <td>@user.Username</td>
                    <td>@user.IdRol</td>
                    <td>@(user.Status == 1 ? "Activo" : "Inactivo")</td>
                    <td>
                        <button class="btn btn-info" @onclick='() => NavManager.NavigateTo($"/usuarios/ver/{user.Id}")'>Ver</button>
                        <button class="btn btn-warning" @onclick='() => NavManager.NavigateTo($"/usuarios/editar/{user.Id}")'>Editar</button>
                        <button class="btn btn-danger" @onclick='() => EliminarUsuario(user.Id)'>Eliminar</button>
                        >
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (!string.IsNullOrEmpty(mensaje))
{
    <p>@mensaje</p>
}

@code {
    private List<UsuarioDTO>? usuarios;
    private string? mensaje;

    protected override async Task OnInitializedAsync()
    {
        usuarios = await UsuarioServicee.GetUsuariosAsync();
    }

    private void VerUsuario(int id)
    {
        NavManager.NavigateTo($"/usuarios/ver/{id}");
        mensaje = $"Mostrando detalle del usuario con Id = {id}";
        // Aquí podrías abrir un modal o navegar a otra página
    }

    private void EditarUsuario(int id)
    {
        mensaje = $"Editar usuario con Id = {id}";
        // Aquí podrías navegar a /editar-usuario/{id}
    }

    private async Task EliminarUsuario(int id)
    {
        var ok = await UsuarioServicee.EliminarUsuarioAsync(id);
        if (ok)
        {
            mensaje = "Usuario eliminado ✅";
            usuarios = await UsuarioServicee.GetUsuariosAsync();
        }
        else
        {
            mensaje = "Error al eliminar usuario ❌";
        }
    }
}