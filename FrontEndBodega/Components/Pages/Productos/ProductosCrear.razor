@page "/productos/crear"
@using FrontEndBodega.DTO
@using FrontEndBodega.Services
@inject ProductoService ProductoService
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.Components.Forms

<h3>Crear Producto</h3>

<EditForm Model="producto" OnValidSubmit="HandleCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Nombre</label>
        <InputText class="form-control" @bind-Value="producto.Nombre" />
    </div>
    <div class="mb-3">
        <label>Descripción</label>
        <InputTextArea class="form-control" @bind-Value="producto.Descripcion" />
    </div>

    <div class="row">
        <div class="col">
            <label>Precio compra</label>
            <InputNumber class="form-control" @bind-Value="producto.PrecioCompra" />
        </div>
        <div class="col">
            <label>Precio venta</label>
            <InputNumber class="form-control" @bind-Value="producto.PrecioVenta" />
        </div>
        <div class="col">
            <label>Costo promedio</label>
            <InputNumber class="form-control" @bind-Value="producto.CostoPromedio" />
        </div>
    </div>

    <div class="row mt-2">
        <div class="col">
            <label>Stock actual</label>
            <InputNumber class="form-control" @bind-Value="producto.StockActual" />
        </div>
        <div class="col">
            <label>Stock mínimo</label>
            <InputNumber class="form-control" @bind-Value="producto.StockMinimo" />
        </div>
    </div>

    <div class="row mt-2">
        <div class="col">
            <label>Nombre Categoría</label>
            <InputText class="form-control" @bind-Value="producto.CategoriaNombre" />
        </div>
        <div class="col">
            <label>Nombre Proveedor</label>
            <InputText class="form-control" @bind-Value="producto.ProveedorNombre" />
        </div>
    </div>

    <div class="mb-3 mt-2">
        <label>Imagen (opcional)</label><br />
        <InputFile OnChange="OnInputFileChange" />
        @if (!string.IsNullOrEmpty(producto.ImagenUrl))
        {
            <div class="mt-2">
                <img src="@producto.ImagenUrl" alt="imagen" style="height:80px;" />
            </div>
        }
    </div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-secondary ms-2" type="button" @onclick='() => NavManager.NavigateTo("/productos")'>Listar Productos</button>
</EditForm>

<p>@mensaje</p>

@code {
    private ProductoDTO producto = new();
    private string mensaje = string.Empty;

    private IBrowserFile? selectedFile; // archivo seleccionado

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.File; // guardamos el archivo cuando se selecciona
    }

    private async Task HandleCreate()
    {
        try
        {
            Stream? fileStream = null;
            string? fileName = null;
            string? contentType = null;

            if (selectedFile != null)
            {
                fileStream = selectedFile.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024); // máximo 5 MB
                fileName = selectedFile.Name;
                contentType = selectedFile.ContentType;
            }

            var res = await ProductoService.CrearProductoAsync(producto, fileStream, fileName, contentType);
            mensaje = res;

            if (res.StartsWith("✅"))
            {
                NavManager.NavigateTo("/productos");
            }
        }
        catch (Exception ex)
        {
            mensaje = $"❌ Error: {ex.Message}";
        }
    }
}