@page "/categorias/crear"
@using FrontEndBodega.DTO
@using FrontEndBodega.Services
@inject NavigationManager NavManager
@inject CategoriaService CategoriaService

@* <h3>Crear Categoría</h3>

<EditForm Model="@categoria" OnValidSubmit="GuardarCategoria">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Nombre</label>
        <InputText @bind-Value="categoria.Nombre" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Descripción</label>
        <InputText @bind-Value="categoria.Descripcion" class="form-control" />
    </div>

    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <button class="btn btn-secondary ms-2" type="button" @onclick='@(() => NavManager.NavigateTo("/categorias"))'>Listar categorias</button>
    </div>
</EditForm> *@


<div class="categoria-container">
    <div class="categoria-card">
        <h3 class="titulo-principal">📂 Crear Categoría</h3>

        <EditForm Model="@categoria" OnValidSubmit="GuardarCategoria">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Nombre</label>
                <InputText @bind-Value="categoria.Nombre" class="form-control custom-input" />
            </div>

            <div class="mb-3">
                <label class="form-label">Descripción</label>
                <InputText @bind-Value="categoria.Descripcion" class="form-control custom-input" />
            </div>

            <div class="acciones mt-4">
                <button type="submit" class="btn btn-guardar">✅ Guardar</button>
                <button class="btn btn-volver ms-2" type="button" @onclick='@(() => NavManager.NavigateTo("/categorias"))'>
                    📋 Listar Categorías
                </button>
            </div>
        </EditForm>
    </div>
</div>

<style>
    /* Contenedor general */
    .categoria-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 90vh;
        background-color: #f3f3f3;
        padding: 30px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Card */
    .categoria-card {
        background-color: white;
        padding: 35px;
        border-radius: 16px;
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        width: 100%;
        max-width: 450px;
    }

    /* Título */
    .titulo-principal {
        color: limegreen;
        font-size: 1.7rem;
        margin-bottom: 20px;
        text-align: center;
        font-weight: 600;
    }

    /* Inputs */
    .custom-input {
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 10px 12px;
        transition: all 0.3s ease;
    }

        .custom-input:focus {
            outline: none;
            border-color: limegreen;
            box-shadow: 0 0 6px rgba(50,205,50,0.4);
        }

    /* Labels */
    .form-label {
        font-weight: 500;
        margin-bottom: 5px;
        display: block;
        color: #333;
    }

    /* Botones */
    .acciones .btn {
        padding: 10px 18px;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        border: none;
    }

    /* Guardar */
    .btn-guardar {
        background-color: limegreen;
        color: white;
    }

        .btn-guardar:hover {
            background-color: #32cd32;
        }

    /* Volver */
    .btn-volver {
        background-color: #6c757d;
        color: white;
    }

        .btn-volver:hover {
            background-color: #5a6268;
        }
</style>



@if (!string.IsNullOrEmpty(mensaje))
{
    <div class="alert alert-info mt-3">@mensaje</div>
}

@code {
    private CategoriaDTO categoria = new();
    private string? mensaje;

    private async Task GuardarCategoria()
    {
        mensaje = await CategoriaService.CrearCategoriaAsync(categoria);
    }
}
